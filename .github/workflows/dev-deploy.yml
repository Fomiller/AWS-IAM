# .github/workflows/dev-deploy.yml

name: 'Terragrunt Deploy DEV'
  
on:
  push:
    paths:
      - '.github/**'
      - 'modules/**'
      - 'us-east-1/**'
    branches:
      - '**' # matches every branch
      - '!main' # excludes main
      - '!master' #excludes master
        
  pull_request:
    types:
      - "closed"
    branches:
      - '**' # matches every branch
      - '!main' # excludes main
      - '!master' #excludes master
        
jobs:
  pre-check:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v5
        with:
          cancel_others: 'true'
          concurrent_skipping: 'same_content_newer'
            
  deploy-aws-infra:
    needs: pre-check
    if: ${{ (github.event.pull_request.merged == true || github.event_name == 'push') && needs.pre-check.outputs.should_skip != 'true' }}
    name: 'Deploy AWS Infra DEV'
    runs-on: ubuntu-latest
    env:
      TF_VAR_username: ${{secrets.USERNAME}}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}
      AWS_PROFILE: saml
      AWS_DEFAULT_REGION: us-east-1
      AWS_DEFAULT_OUTPUT: json
      INFRA_DIR: us-east-1/dev
      TF_VERSION: latest  
      TG_VERSION: v0.42.8  

    steps:
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}
        aws-region: us-east-2
        role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME_DEV }}
        role-duration-seconds: 1200
          
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    # Install the latest version of Terragrunt CLI and configure the Terragrunt CLI configuration file with a Terragrunt Cloud user API toke
    - name: Install Terraform ${{env.TF_VERSION}}
      uses: hashicorp/setup-Terraform@v1
      with:
        terraform_version: ${{env.TF_VERSION}}
          
    - name: Install Terragrunt ${{env.TG_VERSION}}
      run: |
        sudo wget -q -O /bin/terragrunt "https://github.com/gruntwork-io/terragrunt/releases/download/${{env.TG_VERSION}}/terragrunt_linux_amd64"
        sudo chmod +x /bin/terragrunt

    - name: Terragrunt Validate
      continue-on-error: false
      run: |
        terragrunt run-all validate --terragrunt-working-dir ${{env.INFRA_DIR}} --terragrunt-non-interactive
        
    - name: Terragrunt Apply
      continue-on-error: false
      run: |
        terragrunt run-all apply --terragrunt-working-dir ${{env.INFRA_DIR}} --terragrunt-non-interactive

    # use if you need to debug workflow
    # - name: DEBUG
    #   uses: lhotari/action-upterm@v1
    #   with:
    #      limit-access-to-actor: true
          # limit-access-to-users: Fomiller
